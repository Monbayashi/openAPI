{
    "openapi": "3.0.2",
    "info": {
      "title": "OpenAPI Course",
      "version": "1.0",
      "description": "Specification for OpenAPI Course",
      "contact": {
        "name": "Monbayashi",
        "email": "test@test.com"
      },
      "license": {
        "name": "Apache 2.0"
      }
    },
    "servers": [
      {
        "url": "https://api.server.test/v1",
        "description": "Development Server"
      }
    ],
    "paths": {
      "/v1/customers": {
        "get": {
          "summary": "List Customers",
          "description": "Get a list of customers in the system",
          "tags": [
            "Customers"
          ],
          "operationId": "listCustomersV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/PageNumberQueryParam"
            },
            {
              "$ref": "#/components/parameters/PageSizeQueryParam"
            }
          ],
          "responses": {
            "200": {
              "description": "List of Customers",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerPagedList"
                  }
                }
              }
            }
          },
          "security": []
        },
        "post": {
          "summary": "New Customer",
          "description": "Create a new customer",
          "tags": [
            "Customers"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Customer Created",
              "headers": {
                "location": {
                  "description": "Location of the created customer",
                  "schema": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://example.com/v1/customers/{assigendIdValue}"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "409": {
              "description": "Conflict"
            }
          }
        }
      },
      "/v1/customers/{customerId}": {
        "get": {
          "summary": "Get Customer by Id",
          "description": "Get a single ***Customer*** by its Id value.",
          "tags": [
            "Customers"
          ],
          "operationId": "getCustomerByIdV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/CustomerIdPathParam"
            }
          ],
          "responses": {
            "200": {
              "description": "Found Customer",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not found"
            },
            "409": {
              "description": "Conflict"
            }
          }
        },
        "put": {
          "summary": "Update Customer",
          "description": "Update customer by id",
          "tags": [
            "Customers"
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/CustomerIdPathParam"
            }
          ],
          "operationId": "putCustomerByIdV1",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "Customer Updated"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not found"
            },
            "409": {
              "description": "Conflict"
            }
          }
        },
        "delete": {
          "summary": "Delete Customer by Id",
          "description": "Delete a single ***Customer*** by its Id value.",
          "tags": [
            "Customers"
          ],
          "operationId": "deleteCustomerByIdV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/CustomerIdPathParam"
            }
          ],
          "responses": {
            "200": {
              "description": "Customer Deleted"
            },
            "404": {
              "description": "Not found"
            }
          }
        }
      },
      "/v1/beers": {
        "get": {
          "summary": "List Beers",
          "description": "Get a list of beers in the system",
          "tags": [
            "Beers"
          ],
          "operationId": "listBeersV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/PageNumberQueryParam"
            },
            {
              "$ref": "#/components/parameters/PageSizeQueryParam"
            }
          ],
          "responses": {
            "200": {
              "description": "List of Beers",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BeerPagedList"
                  }
                }
              }
            },
            "404": {
              "description": "No Beers Found"
            }
          }
        },
        "post": {
          "summary": "New Beer",
          "description": "Create a new Beer Object",
          "tags": [
            "Beers"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Beer Created",
              "headers": {
                "Location": {
                  "description": "Beer Object created",
                  "schema": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://example.com/v1/beer/{assigendIdValue}"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "409": {
              "description": "Conflict"
            }
          }
        }
      },
      "/v1/beers/{beerId}": {
        "get": {
          "summary": "Get Beer by Id",
          "description": "Get a single ***Beer*** by its Id value.",
          "tags": [
            "Beers"
          ],
          "operationId": "getBeerByIdV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/BeerIdPathParam"
            }
          ],
          "responses": {
            "200": {
              "description": "Found Beer by Id",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Beer"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not found"
            },
            "409": {
              "description": "Conflict"
            }
          }
        },
        "put": {
          "summary": "Update Beer",
          "description": "Update beer by id",
          "tags": [
            "Beers"
          ],
          "operationId": "putBeerByIdV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/BeerIdPathParam"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "Beer Updated"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not found"
            },
            "409": {
              "description": "Conflict"
            }
          }
        },
        "delete": {
          "summary": "Delete Beer by Id",
          "description": "Delete a single ***Beer*** by its Id value.",
          "tags": [
            "Beers"
          ],
          "operationId": "deleteBeerByIdV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/BeerIdPathParam"
            }
          ],
          "responses": {
            "200": {
              "description": "Beer deleted"
            },
            "404": {
              "description": "Not found"
            }
          }
        }
      }
    },
    "security": [
      {
        "BasicAuth": []
      },
      {
        "JwtAuthToken": []
      }
    ],
    "components": {
      "securitySchemes": {
        "BasicAuth": {
          "type": "http",
          "scheme": "basic"
        },
        "JwtAuthToken": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "parameters": {
        "PageNumberQueryParam": {
          "name": "pageNumber",
          "in": "query",
          "description": "Page Number",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        },
        "PageSizeQueryParam": {
          "name": "pageSize",
          "in": "query",
          "description": "Page Size",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 25
          }
        },
        "CustomerIdPathParam": {
          "name": "customerId",
          "in": "path",
          "description": "Customer Id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "BeerIdPathParam": {
          "name": "beerId",
          "in": "path",
          "description": "Beer Id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "schemas": {
        "Address": {
          "type": "object",
          "properties": {
            "line1": {
              "type": "string",
              "example": "123 main"
            },
            "city": {
              "type": "string",
              "example": "St pete"
            },
            "stateCode": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "description": "2 Letter State Code",
              "enum": [
                "AL",
                "AK",
                "AZ",
                "AR",
                "CA"
              ]
            },
            "zipCode": {
              "type": "string",
              "example": 33701
            }
          }
        },
        "Customer": {
          "type": "object",
          "description": "customer object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "firstName": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100,
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100,
              "example": "Thompson"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "CustomerList": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "List of Customers",
          "items": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "CustomerPagedList": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/PagedResponse"
            }
          ],
          "properties": {
            "content": {
              "$ref": "#/components/schemas/CustomerList"
            }
          }
        },
        "Brewery": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          }
        },
        "Beer": {
          "type": "object",
          "description": "Beer Object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "beerName": {
              "type": "string"
            },
            "style": {
              "type": "string",
              "enum": [
                "ALE",
                "PALE_ALE",
                "IPA",
                "WHEAT",
                "LAGER"
              ]
            },
            "price": {
              "type": "number",
              "format": "float"
            },
            "qantityOnHand": {
              "type": "integer",
              "format": "int32"
            },
            "brewery": {
              "$ref": "#/components/schemas/Brewery"
            }
          }
        },
        "BeerList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Beer"
          }
        },
        "BeerPagedList": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/PagedResponse"
            }
          ],
          "properties": {
            "content": {
              "$ref": "#/components/schemas/BeerList"
            }
          }
        },
        "PagedResponse": {
          "type": "object",
          "properties": {
            "pageable": {
              "type": "object",
              "properties": {
                "sort": {
                  "type": "object",
                  "properties": {
                    "sorted": {
                      "type": "boolean"
                    },
                    "unsorted": {
                      "type": "boolean"
                    }
                  }
                },
                "offset": {
                  "type": "integer",
                  "format": "int32"
                },
                "pageNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "paged": {
                  "type": "boolean"
                },
                "unpaged": {
                  "type": "boolean"
                }
              }
            },
            "totalPage": {
              "type": "integer",
              "format": "int32"
            },
            "last": {
              "type": "boolean"
            },
            "totalElements": {
              "type": "integer",
              "format": "int32"
            },
            "size": {
              "type": "integer",
              "format": "int32"
            },
            "number": {
              "type": "integer",
              "format": "int32"
            },
            "numberOfElements": {
              "type": "integer",
              "format": "int32"
            },
            "sort": {
              "type": "object",
              "properties": {
                "sorted": {
                  "type": "boolean"
                },
                "unsorted": {
                  "type": "boolean"
                }
              }
            },
            "first": {
              "type": "boolean"
            }
          }
        }
      }
    }
  }