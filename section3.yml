openapi: '3.0.2'
info:
  title: 'OpenAPI Course'
  version: '1.0'
  description: Specification for OpenAPI Course
  contact:
    name: Monbayashi
    email: test@test.com
  license:
    name: Apache 2.0
servers:
  - url: https://api.server.test/v1
    description: Development Server
paths:
  /v1/customers:
    get:
      responses:
        '200':
          description: List of Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'

  /v1/beers:
    get:
      responses:
        '200':
          description: List of Beers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerPagedList'
        '404':
          description: No Beers Found
components:
  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 123 main
        city:
          type: string
          example: St pete
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 2 Letter State Code
          enum: [AL, AK, AZ, AR, CA]
        zipCode:
          type: string
          example: 33701
    Customer:
      type: object
      description: customer object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 100
          example: John
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: Thompson
        address:
          $ref: '#/components/schemas/Address'
    CustomerList:
      type: array
      minItems: 1
      maxItems: 100
      description: List of Customers
      items:
        $ref: '#/components/schemas/Customer'
    CustomerPagedList:
      type: object
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
      properties:
        content:
          $ref: '#/components/schemas/CustomerList'

    Brewery:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
    Beer:
      type: object
      description: Beer Object
      properties:
        beerName:
          type: string
        style:
          type: string
          enum: [ALE, PALE_ALE, IPA, WHEAT, LAGER]
        price:
          type: number
          format: float
        qantityOnHand:
          type: integer
          format: int32
        brewery:
          $ref: '#/components/schemas/Brewery'
    BeerList:
      type: array
      items:
        $ref: '#/components/schemas/Beer'
    BeerPagedList:
      type: object
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
      properties:
        content:
          $ref: '#/components/schemas/BeerList'

    PagedResponse:
      type: object
      properties:
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            offset:
              type: integer
              format: int32
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPage:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          type: object
          properties:
            sorted:
              type: boolean
            unsorted:
              type: boolean
        first:
          type: boolean

